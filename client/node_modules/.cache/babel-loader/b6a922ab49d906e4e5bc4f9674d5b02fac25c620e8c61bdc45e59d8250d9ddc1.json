{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ashish\\\\2_1\\\\2_1_Project\\\\Actual_Project\\\\newdemo\\\\Webcapture_part\\\\client\\\\src\\\\components\\\\GameComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './GameComponent.css';\nimport ImageCapture from './ImageCaptureComponent';\nimport Confetti from 'react-confetti';\nimport { useWindowSize } from 'react-use'; // this edits the session id\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shapes = ['circle', 'square', 'triangle'];\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [streak, setStreak] = useState(0);\n  const [isGameActive, setIsGameActive] = useState(true);\n  const [sessionId, setSessionId] = useState(null);\n  const {\n    width,\n    height\n  } = useWindowSize(); // For confetti dimensions\n\n  const cameraStream = useRef(null); // Ref to store webcam stream\n\n  // Fetch or start a session when the app loads\n  const startSession = async () => {\n    if (!sessionId) {\n      try {\n        const response = await fetch('http://localhost:5000/start-session');\n        const data = await response.json();\n        setSessionId(data.sessionId); // Save session ID from the server\n      } catch (error) {\n        console.error('Error creating session:', error);\n      }\n    }\n  };\n  const stopCamera = () => {\n    if (cameraStream.current) {\n      const tracks = cameraStream.current.getTracks();\n      tracks.forEach(track => track.stop());\n    }\n  };\n  useEffect(() => {\n    startSession(); // Start a session when the component mounts\n    return () => stopCamera(); // Cleanup on unmount\n  }, []); // Empty dependency ensures this runs only once\n\n  useEffect(() => {\n    const newQuestions = Array(5).fill(null).map(() => {\n      const randomShape = shapes[Math.floor(Math.random() * shapes.length)];\n      const randomCount = Math.floor(Math.random() * 5) + 1;\n      const sequence = Array(randomCount).fill(randomShape).concat(Array(9 - randomCount).fill(null).map(() => shapes[Math.floor(Math.random() * shapes.length)]));\n      const correctAnswer = sequence.filter(s => s === randomShape).length;\n      let options = [correctAnswer];\n      while (options.length < 4) {\n        const randomOption = Math.floor(Math.random() * 5) + 1;\n        if (!options.includes(randomOption)) {\n          options.push(randomOption);\n        }\n      }\n      return {\n        shape: randomShape,\n        sequence,\n        correctAnswer,\n        options: shuffleArray([...options])\n      };\n    });\n    setQuestions(newQuestions);\n  }, []);\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestion < questions.length) {\n      const {\n        options\n      } = questions[currentQuestion];\n      setShuffledOptions(options);\n    }\n  }, [currentQuestion, questions]);\n  const handleAnswer = answer => {\n    if (!isAnswered) {\n      setSelectedAnswer(answer);\n      setIsAnswered(true);\n      const correctAnswer = questions[currentQuestion].correctAnswer;\n      const correct = answer === correctAnswer;\n      setIsCorrect(correct);\n      if (correct) {\n        setScore(score + 1);\n        setStreak(streak + 1);\n      } else {\n        setStreak(0);\n      }\n    }\n  };\n  const nextQuestion = () => {\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n    setIsCorrect(null);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setIsGameActive(false);\n      stopCamera(); // Stop camera when game ends\n    }\n  };\n  const restartGame = async () => {\n    setSessionId(null); // Reset sessionId for new session\n    await startSession(); // Restart the session and create a new session ID\n    setScore(0);\n    setCurrentQuestion(0);\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n    setIsCorrect(null);\n    setStreak(0);\n    setIsGameActive(true);\n  };\n  const getSmiley = () => {\n    if (!isAnswered) {\n      return '😊';\n    }\n    if (isCorrect) {\n      return streak > 1 ? '😁' : '😃';\n    } else {\n      return '😢';\n    }\n  };\n  const renderImageCapture = () => {\n    if (isGameActive && sessionId) {\n      return /*#__PURE__*/_jsxDEV(ImageCapture, {\n        sessionId: sessionId,\n        isActive: isGameActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  if (!isGameActive) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Confetti, {\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"game-title\",\n        children: \"Shape Counting Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: [\"Your score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-btn\",\n          onClick: restartGame,\n          \"aria-label\": \"Play Again\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 38\n  }, this);\n  const {\n    shape,\n    sequence\n  } = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [renderImageCapture(), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Shape Counting Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"How many \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"target-shape\",\n          children: [shape, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 20\n        }, this), \" are in the sequence?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shape-sequence\",\n        children: sequence.map((s, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `shape ${s}`,\n          \"aria-label\": `A ${s}`,\n          children: s && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"smiley\",\n            children: getSmiley()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: shuffledOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option-btn\",\n          onClick: () => handleAnswer(option),\n          disabled: isAnswered,\n          \"aria-label\": `Select ${option}`,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), selectedAnswer !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: isCorrect ? 'Correct!' : `Wrong! The correct answer was ${questions[currentQuestion].correctAnswer}.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-btn\",\n          onClick: nextQuestion,\n          \"aria-label\": \"Next Question\",\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ONZMHZK2L9yMAiaRd1lv0qIgGUA=\", false, function () {\n  return [useWindowSize];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ImageCapture","Confetti","useWindowSize","jsxDEV","_jsxDEV","shapes","shuffleArray","array","i","length","j","Math","floor","random","App","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","questions","setQuestions","isAnswered","setIsAnswered","isCorrect","setIsCorrect","shuffledOptions","setShuffledOptions","streak","setStreak","isGameActive","setIsGameActive","sessionId","setSessionId","width","height","cameraStream","startSession","response","fetch","data","json","error","console","stopCamera","current","tracks","getTracks","forEach","track","stop","newQuestions","Array","fill","map","randomShape","randomCount","sequence","concat","correctAnswer","filter","s","options","randomOption","includes","push","shape","handleAnswer","answer","correct","nextQuestion","restartGame","getSmiley","renderImageCapture","isActive","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","index","option","disabled","_c","$RefreshReg$"],"sources":["D:/Ashish/2_1/2_1_Project/Actual_Project/newdemo/Webcapture_part/client/src/components/GameComponent.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './GameComponent.css';\r\nimport ImageCapture from './ImageCaptureComponent';\r\nimport Confetti from 'react-confetti';\r\nimport { useWindowSize } from 'react-use';// this edits the session id\r\n\r\nconst shapes = ['circle', 'square', 'triangle'];\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction App() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [shuffledOptions, setShuffledOptions] = useState([]);\r\n  const [streak, setStreak] = useState(0);\r\n  const [isGameActive, setIsGameActive] = useState(true);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const { width, height } = useWindowSize(); // For confetti dimensions\r\n\r\n  const cameraStream = useRef(null); // Ref to store webcam stream\r\n\r\n  // Fetch or start a session when the app loads\r\n  const startSession = async () => {\r\n    if (!sessionId) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/start-session');\r\n        const data = await response.json();\r\n        setSessionId(data.sessionId); // Save session ID from the server\r\n      } catch (error) {\r\n        console.error('Error creating session:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (cameraStream.current) {\r\n      const tracks = cameraStream.current.getTracks();\r\n      tracks.forEach((track) => track.stop());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startSession(); // Start a session when the component mounts\r\n    return () => stopCamera(); // Cleanup on unmount\r\n  }, []); // Empty dependency ensures this runs only once\r\n\r\n  useEffect(() => {\r\n    const newQuestions = Array(5)\r\n      .fill(null)\r\n      .map(() => {\r\n        const randomShape = shapes[Math.floor(Math.random() * shapes.length)];\r\n        const randomCount = Math.floor(Math.random() * 5) + 1;\r\n        const sequence = Array(randomCount)\r\n          .fill(randomShape)\r\n          .concat(\r\n            Array(9 - randomCount).fill(null).map(() => shapes[Math.floor(Math.random() * shapes.length)]),\r\n          );\r\n\r\n        const correctAnswer = sequence.filter((s) => s === randomShape).length;\r\n\r\n        let options = [correctAnswer];\r\n        while (options.length < 4) {\r\n          const randomOption = Math.floor(Math.random() * 5) + 1;\r\n          if (!options.includes(randomOption)) {\r\n            options.push(randomOption);\r\n          }\r\n        }\r\n\r\n        return {\r\n          shape: randomShape,\r\n          sequence,\r\n          correctAnswer,\r\n          options: shuffleArray([...options]),\r\n        };\r\n      });\r\n    setQuestions(newQuestions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (questions.length > 0 && currentQuestion < questions.length) {\r\n      const { options } = questions[currentQuestion];\r\n      setShuffledOptions(options);\r\n    }\r\n  }, [currentQuestion, questions]);\r\n\r\n  const handleAnswer = (answer) => {\r\n    if (!isAnswered) {\r\n      setSelectedAnswer(answer);\r\n      setIsAnswered(true);\r\n\r\n      const correctAnswer = questions[currentQuestion].correctAnswer;\r\n      const correct = answer === correctAnswer;\r\n      setIsCorrect(correct);\r\n\r\n      if (correct) {\r\n        setScore(score + 1);\r\n        setStreak(streak + 1);\r\n      } else {\r\n        setStreak(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    setSelectedAnswer(null);\r\n    setIsAnswered(false);\r\n    setIsCorrect(null);\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setIsGameActive(false);\r\n      stopCamera(); // Stop camera when game ends\r\n    }\r\n  };\r\n\r\n  const restartGame = async () => {\r\n    setSessionId(null); // Reset sessionId for new session\r\n    await startSession(); // Restart the session and create a new session ID\r\n    setScore(0);\r\n    setCurrentQuestion(0);\r\n    setSelectedAnswer(null);\r\n    setIsAnswered(false);\r\n    setIsCorrect(null);\r\n    setStreak(0);\r\n    setIsGameActive(true);\r\n  };\r\n\r\n  const getSmiley = () => {\r\n    if (!isAnswered) {\r\n      return '😊';\r\n    }\r\n    if (isCorrect) {\r\n      return streak > 1 ? '😁' : '😃';\r\n    } else {\r\n      return '😢';\r\n    }\r\n  };\r\n\r\n  const renderImageCapture = () => {\r\n    if (isGameActive && sessionId) {\r\n      return <ImageCapture sessionId={sessionId} isActive={isGameActive} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (!isGameActive) {\r\n    return (\r\n      <div className=\"app\">\r\n        <Confetti width={width} height={height} />\r\n        <h1 className=\"game-title\">Shape Counting Game</h1>\r\n        <div className=\"game-container\">\r\n          <p className=\"result\">Your score: {score} / {questions.length}</p>\r\n          <button className=\"restart-btn\" onClick={restartGame} aria-label=\"Play Again\">\r\n            Play Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (questions.length === 0) return <div>Loading...</div>;\r\n\r\n  const { shape, sequence } = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {renderImageCapture()}\r\n      <h1 className=\"game-title\">Shape Counting Game</h1>\r\n      <div className=\"game-container\">\r\n        <h3>\r\n          How many <span className=\"target-shape\">{shape}s</span> are in the sequence?\r\n        </h3>\r\n        <div className=\"shape-sequence\">\r\n          {sequence.map((s, index) => (\r\n            <div key={index} className={`shape ${s}`} aria-label={`A ${s}`}>\r\n              {s && <span className=\"smiley\">{getSmiley()}</span>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"options-container\">\r\n          {shuffledOptions.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"option-btn\"\r\n              onClick={() => handleAnswer(option)}\r\n              disabled={isAnswered}\r\n              aria-label={`Select ${option}`}\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {selectedAnswer !== null && (\r\n          <div>\r\n            <p className=\"result\">\r\n              {isCorrect\r\n                ? 'Correct!'\r\n                : `Wrong! The correct answer was ${questions[currentQuestion].correctAnswer}.`}\r\n            </p>\r\n            <button className=\"next-btn\" onClick={nextQuestion} aria-label=\"Next Question\">\r\n              Next Question\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}