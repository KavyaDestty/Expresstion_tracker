{"ast":null,"code":"// client/src/services/api.js\n\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:5000\";\n\n// Store username in memory after successful login\nlet currentUser = null;\nexport const login = async (name, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      name,\n      password\n    });\n    if (response.data.name) {\n      currentUser = response.data.name;\n    }\n    return response.data;\n  } catch (error) {\n    console.error(\"Error logging in:\", error);\n    throw error;\n  }\n};\nexport const startNewSession = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/start-session`, {\n      params: {\n        username: currentUser\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error starting new session:\", error);\n    throw error;\n  }\n};\nexport const uploadImages = async (screenshot, webcamImage, sessionId) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"screenshot\", screenshot);\n    formData.append(\"webcam\", webcamImage);\n    const response = await axios.post(`${API_URL}/upload`, formData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error uploading images:\", error);\n    throw error;\n  }\n};\nexport const fetchSessions = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/sessions`);\n    return response.data.sessions;\n  } catch (error) {\n    console.error(\"Error fetching sessions:\", error);\n    throw error;\n  }\n};\nexport const analyzeSession = async sessionId => {\n  try {\n    const response = await axios.get(`${API_URL}/analyze/${sessionId}`);\n    return {\n      imageAnalyses: response.data.imageAnalyses,\n      overallEmotions: response.data.overallAnalysis.emotions\n    };\n  } catch (error) {\n    console.error(\"Error analyzing session:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","currentUser","login","name","password","response","post","data","error","console","startNewSession","get","params","username","uploadImages","screenshot","webcamImage","sessionId","formData","FormData","append","fetchSessions","sessions","analyzeSession","imageAnalyses","overallEmotions","overallAnalysis","emotions"],"sources":["D:/Ashish/2_1/2_1_Project/Actual_Project/newdemo/Webcapture_part/client/src/services/api.js"],"sourcesContent":["// client/src/services/api.js\r\n\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\n// Store username in memory after successful login\r\nlet currentUser = null;\r\n\r\nexport const login = async (name, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, { name, password });\r\n    if (response.data.name) {\r\n      currentUser = response.data.name;\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error logging in:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const startNewSession = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/start-session`, {\r\n      params: { username: currentUser },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error starting new session:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const uploadImages = async (screenshot, webcamImage, sessionId) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"screenshot\", screenshot);\r\n    formData.append(\"webcam\", webcamImage);\r\n\r\n    const response = await axios.post(`${API_URL}/upload`, formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error uploading images:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSessions = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/sessions`);\r\n    return response.data.sessions;\r\n  } catch (error) {\r\n    console.error(\"Error fetching sessions:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const analyzeSession = async (sessionId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/analyze/${sessionId}`);\r\n    return {\r\n      imageAnalyses: response.data.imageAnalyses,\r\n      overallEmotions: response.data.overallAnalysis.emotions,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error analyzing session:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,QAAQ,EAAE;MAAEG,IAAI;MAAEC;IAAS,CAAC,CAAC;IACzE,IAAIC,QAAQ,CAACE,IAAI,CAACJ,IAAI,EAAE;MACtBF,WAAW,GAAGI,QAAQ,CAACE,IAAI,CAACJ,IAAI;IAClC;IACA,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMN,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,gBAAgB,EAAE;MAC3DY,MAAM,EAAE;QAAEC,QAAQ,EAAEZ;MAAY;IAClC,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,YAAY,GAAG,MAAAA,CAAOC,UAAU,EAAEC,WAAW,EAAEC,SAAS,KAAK;EACxE,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEL,UAAU,CAAC;IACzCG,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,WAAW,CAAC;IAEtC,MAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,SAAS,EAAEkB,QAAQ,CAAC;IAChE,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMN,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,WAAW,CAAC;IACvD,OAAOK,QAAQ,CAACE,IAAI,CAACe,QAAQ;EAC/B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMe,cAAc,GAAG,MAAON,SAAS,IAAK;EACjD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,YAAYiB,SAAS,EAAE,CAAC;IACnE,OAAO;MACLO,aAAa,EAAEnB,QAAQ,CAACE,IAAI,CAACiB,aAAa;MAC1CC,eAAe,EAAEpB,QAAQ,CAACE,IAAI,CAACmB,eAAe,CAACC;IACjD,CAAC;EACH,CAAC,CAAC,OAAOnB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}